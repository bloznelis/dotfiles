(deflisten workspace "scripts/workspace")
(deflisten active-windows "scripts/count-windows.sh")
(defvar wp0 "⊗")
(defvar wp1 "⊙")
(defvar wp2 "⊙")
(defvar wp3 "⊙")
(defvar wp4 "⊙")
(defvar wp5 "⊙")
(defvar wp6 "⊙")

(defvar time_rev false)
(defpoll clock_h_m :interval "5s" "date +\%H:\%M")
(defpoll clock_y_m_d :interval "500ms" :run-while time_rev "date '+\%H:\%M:\%S @ %Y-%m-%d'")

(defpoll calendar_day :interval "1h" "date '+%d'")
(defpoll calendar_month :interval "20h" "date '+%m'")
(defpoll calendar_year :interval "20h" "date '+%Y'")

(defwindow main
          :monitor 0
          :geometry (geometry :x "0%"
                       :y "8"
                       :width "99%"
                       :height "25px"
                       :anchor "top center")
          :reserve (struts :distance "38px"
                           :side "top")
          :stacking "bg"
          :wm-ignore false
          :windowtype "dock"
  (bar))

(defwidget bar []
  (box :class "bar_class"
       :orientation "h"
  (left)
  (right)
    ))

(defwidget left []
	(box :orientation "h"
		 :space-evenly false
         :halign "start"
		 :class "right_modules"
(workspaces)
(window-count)
))

(defwidget right []
	(box :orientation "h"
		 :space-evenly false
         :halign "end"
		 :class "left_modules"
(cpu)
(ram)
(disk)
(clock_module)))

(defwidget ram []
  (icon-module :class "ram" :icon "RAM " :visible {EWW_RAM.used_mem_perc != ""}
    (label :text "${round(EWW_RAM.used_mem_perc, 0)}%")))

(defwidget cpu []
  (icon-module :class "cpu" :icon "CPU "
    (label :text "${round(EWW_CPU.avg, 0)}%")))

(defwidget disk []
  (icon-module :class "disk" :icon "SSD "
    (label :text "${round(EWW_DISK["/"].used_perc, 0)}%")))

(defwidget rcd []
  (icon-module :class "rcd" :icon ""
    (label :text "RAM ${round(EWW_RAM.used_mem_perc, 0)}% CPU ${round(EWW_CPU.avg, 0)}% SSD ${round(EWW_DISK["/"].used_perc, 0)}%")))

(defwidget icon-module [icon ?class ?visible]
  (box :class "${class} icon-module"
       :orientation "h"
       :halign "end"
       :space-evenly false
       :visible {visible ?: true} ; because the argument is optional
    (label :class "icon-module__icon" :text "${icon}")
    (children)))

(defwidget clock_module []
  (eventbox :onclick "eww update time_rev=${!time_rev}"
    (box :class "module" :space-evenly "false" :orientation "h" :spacing "3"
      (label :text clock_h_m :class "clock_time_class" :visible "${!time_rev}")
	  (revealer :transition "slideleft"
			    :reveal time_rev
			    :duration "0ms"
                (button :class "clock_date_class"
                        :onclick "eww update time_rev=${!time_rev}"
                        :onrightclick "$HOME/.config/eww/scripts/pop calendar" clock_y_m_d))
      )))

(defwindow calendar
	:geometry (geometry :x "-30px"
						:y "50px"
                        :anchor "top right"
						:width "270px"
						:height "60px")
(cal))

(defwidget cal []
	(box :class "cal" :orientation "v"
	(box :class "cal-in"
	(calendar :class "cal"
              :show-details true
              :show-day-names true
              ;; does not work, {1} returns previous month
              ; :onclick "firefox --new-tab https://calendar.google.com/calendar/u/1/r/week/{2}/{1}/{0}"
              ))))

(defwidget window-count []
  (box
    :orientation "h"
    :spacing 5
    :class "window_count"
    (label :text "${active-windows}")))

(defwidget workspaces []
  (box
    :orientation "h"
    :halign "start"
    :class "workspaces"
    (box
      :orientation "h"
      :spacing 5
      :space-evenly "false"
      :class "${workspace}"
      (eventbox
        :cursor "pointer"
        (button
          :onclick "bspc desktop -f I"
          (label
            :markup wp0
            :class "workspace_buttons")))
      (eventbox
        :cursor "pointer"
        (button
          :onclick "bspc desktop -f II"
          (label
            :markup wp1
            :class "workspace_buttons")))
      (eventbox
        :cursor "pointer"
        (button
          :onclick "bspc desktop -f III"
          (label
            :markup wp2
            :class "workspace_buttons")))
      (eventbox
        :cursor "pointer"
        (button
          :onclick "bspc desktop -f IV"
          (label
            :markup wp3
            :class "workspace_buttons")))
      (eventbox
        :cursor "pointer"
        (button
          :onclick "bspc desktop -f V"
          (label
            :markup wp4
            :class "workspace_buttons")))
      (eventbox
        :cursor "pointer"
        (button
          :onclick "bspc desktop -f VI"
          (label
            :markup wp5
            :class "workspace_buttons")))
    )))

